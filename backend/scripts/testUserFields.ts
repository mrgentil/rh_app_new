import { sequelize } from '../src/models/sequelize';
import { User } from '../src/models/User';
import { userService } from '../src/services/userService';

async function testUserFields() {
  try {
    console.log('üîß Test des champs photoUrl et salary...\n');

    // 1. R√©cup√©rer tous les utilisateurs
    console.log('1. R√©cup√©ration de tous les utilisateurs...');
    const users = await userService.getAllUsers();
    console.log(`‚úÖ ${users.length} utilisateurs trouv√©s`);
    
    if (users.length > 0) {
      const firstUser = users[0];
      console.log(`   - Utilisateur: ${firstUser.username}`);
      console.log(`   - Photo URL: ${firstUser.photoUrl || 'Non d√©finie'}`);
      console.log(`   - Salaire: ${firstUser.salary || 'Non d√©fini'}`);
    }

    // 2. R√©cup√©rer un utilisateur sp√©cifique
    if (users.length > 0) {
      console.log('\n2. R√©cup√©ration d\'un utilisateur sp√©cifique...');
      const user = await userService.getUserById(users[0].id);
      if (user) {
        console.log(`‚úÖ Utilisateur trouv√©: ${user.username}`);
        console.log(`   - Photo URL: ${user.photoUrl || 'Non d√©finie'}`);
        console.log(`   - Salaire: ${user.salary || 'Non d√©fini'}`);
      }
    }

    // 3. Test de mise √† jour
    if (users.length > 0) {
      console.log('\n3. Test de mise √† jour...');
      const testPhotoUrl = 'https://example.com/test-photo.jpg';
      const testSalary = 50000;
      
      const updatedUser = await userService.updateUser(users[0].id, {
        photoUrl: testPhotoUrl,
        salary: testSalary
      });
      
      console.log(`‚úÖ Utilisateur mis √† jour: ${updatedUser.username}`);
      console.log(`   - Nouvelle Photo URL: ${updatedUser.photoUrl}`);
      console.log(`   - Nouveau Salaire: ${updatedUser.salary}`);
    }

    console.log('\n‚úÖ Test termin√© avec succ√®s !');
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  } finally {
    await sequelize.close();
  }
}

testUserFields(); 