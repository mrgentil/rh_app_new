import axios from 'axios';

async function testRolesAPI() {
  try {
    console.log('üîç Test de l\'API des r√¥les...');
    
    // Test 1: R√©cup√©rer tous les r√¥les
    console.log('\nüìã Test 1: R√©cup√©ration des r√¥les');
    const rolesResponse = await axios.get('http://localhost:3001/api/roles');
    const roles = rolesResponse.data;
    
    console.log(`‚úÖ ${roles.length} r√¥les r√©cup√©r√©s`);
    roles.forEach((role: any) => {
      const permissions = JSON.parse(role.permissions || '[]');
      console.log(`  ‚Ä¢ ${role.name}: ${permissions.length} permissions, ${role.userCount || 0} utilisateurs`);
    });
    
    // Test 2: V√©rifier les permissions d'un r√¥le sp√©cifique
    console.log('\nüìã Test 2: V√©rification des permissions du r√¥le RH');
    const rhRole = roles.find((role: any) => role.name === 'RH');
    if (rhRole) {
      const permissions = JSON.parse(rhRole.permissions);
      console.log(`‚úÖ R√¥le RH trouv√© avec ${permissions.length} permissions:`);
      permissions.forEach((permission: string) => {
        console.log(`  ‚Ä¢ ${permission}`);
      });
    } else {
      console.log('‚ùå R√¥le RH non trouv√©');
    }
    
    // Test 3: V√©rifier la structure des donn√©es
    console.log('\nüìã Test 3: Structure des donn√©es');
    if (roles.length > 0) {
      const firstRole = roles[0];
      console.log('‚úÖ Structure du premier r√¥le:');
      console.log(`  ‚Ä¢ id: ${firstRole.id}`);
      console.log(`  ‚Ä¢ name: ${firstRole.name}`);
      console.log(`  ‚Ä¢ permissions: ${typeof firstRole.permissions}`);
      console.log(`  ‚Ä¢ userCount: ${firstRole.userCount}`);
      console.log(`  ‚Ä¢ createdAt: ${firstRole.createdAt}`);
    }
    
    console.log('\nüéâ Tests termin√©s avec succ√®s!');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error);
    process.exit(1);
  }
}

testRolesAPI(); 