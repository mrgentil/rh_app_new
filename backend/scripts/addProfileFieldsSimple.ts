import { sequelize } from '../src/models/sequelize';

async function addProfileFieldsSimple() {
  try {
    console.log('üîß Ajout des champs manquants pour le profil utilisateur...');

    // Ajouter les colonnes manquantes √† la table employees
    try {
      await sequelize.query(`ALTER TABLE employees ADD COLUMN city VARCHAR(100) NULL`);
    } catch (e) { console.log('Colonne city existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE employees ADD COLUMN postalCode VARCHAR(20) NULL`);
    } catch (e) { console.log('Colonne postalCode existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE employees ADD COLUMN country VARCHAR(100) NULL DEFAULT 'France'`);
    } catch (e) { console.log('Colonne country existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE employees ADD COLUMN emergencyContactName VARCHAR(255) NULL`);
    } catch (e) { console.log('Colonne emergencyContactName existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE employees ADD COLUMN emergencyContactPhone VARCHAR(50) NULL`);
    } catch (e) { console.log('Colonne emergencyContactPhone existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE employees ADD COLUMN emergencyContactRelationship VARCHAR(100) NULL`);
    } catch (e) { console.log('Colonne emergencyContactRelationship existe d√©j√†'); }

    console.log('‚úÖ Colonnes ajout√©es √† la table employees');

    // Ajouter les colonnes manquantes √† la table users
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN firstName VARCHAR(100) NULL`);
    } catch (e) { console.log('Colonne firstName existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN lastName VARCHAR(100) NULL`);
    } catch (e) { console.log('Colonne lastName existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN phone VARCHAR(50) NULL`);
    } catch (e) { console.log('Colonne phone existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN address TEXT NULL`);
    } catch (e) { console.log('Colonne address existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN city VARCHAR(100) NULL`);
    } catch (e) { console.log('Colonne city existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN postalCode VARCHAR(20) NULL`);
    } catch (e) { console.log('Colonne postalCode existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN country VARCHAR(100) NULL DEFAULT 'France'`);
    } catch (e) { console.log('Colonne country existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN emergencyContactName VARCHAR(255) NULL`);
    } catch (e) { console.log('Colonne emergencyContactName existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN emergencyContactPhone VARCHAR(50) NULL`);
    } catch (e) { console.log('Colonne emergencyContactPhone existe d√©j√†'); }
    
    try {
      await sequelize.query(`ALTER TABLE users ADD COLUMN emergencyContactRelationship VARCHAR(100) NULL`);
    } catch (e) { console.log('Colonne emergencyContactRelationship existe d√©j√†'); }

    console.log('‚úÖ Colonnes ajout√©es √† la table users');

    // Mettre √† jour les donn√©es existantes
    console.log('üîÑ Mise √† jour des donn√©es existantes...');

    // Copier les donn√©es des employ√©s vers les utilisateurs
    await sequelize.query(`
      UPDATE users u
      INNER JOIN employees e ON u.employeeId = e.id
      SET 
        u.firstName = e.firstName,
        u.lastName = e.lastName,
        u.email = e.email,
        u.phone = e.phone,
        u.address = e.address,
        u.photoUrl = COALESCE(e.photoUrl, u.photoUrl),
        u.salary = COALESCE(e.salary, u.salary)
      WHERE u.employeeId IS NOT NULL
    `);

    console.log('‚úÖ Donn√©es copi√©es des employ√©s vers les utilisateurs');

    // Ajouter des contacts d'urgence par d√©faut
    await sequelize.query(`
      UPDATE employees 
      SET 
        emergencyContactName = 'Contact d''urgence',
        emergencyContactPhone = '+33 1 23 45 67 89',
        emergencyContactRelationship = 'Famille'
      WHERE emergencyContactName IS NULL
    `);

    await sequelize.query(`
      UPDATE users 
      SET 
        emergencyContactName = 'Contact d''urgence',
        emergencyContactPhone = '+33 1 23 45 67 89',
        emergencyContactRelationship = 'Famille'
      WHERE emergencyContactName IS NULL
    `);

    console.log('‚úÖ Contacts d\'urgence ajout√©s par d√©faut');

    // Cr√©er une vue pour faciliter l'acc√®s aux donn√©es de profil
    await sequelize.query(`
      CREATE OR REPLACE VIEW user_profiles AS
      SELECT 
        u.id as userId,
        u.username,
        u.email,
        u.firstName,
        u.lastName,
        u.phone,
        u.address,
        u.city,
        u.postalCode,
        u.country,
        u.photoUrl,
        u.salary,
        u.emergencyContactName,
        u.emergencyContactPhone,
        u.emergencyContactRelationship,
        u.createdAt as userCreatedAt,
        u.updatedAt as userUpdatedAt,
        e.id as employeeId,
        e.birthDate,
        e.hireDate,
        e.status as employeeStatus,
        e.employeeType,
        e.contractEndDate,
        d.name as departmentName,
        jt.title as jobTitle,
        r.name as roleName,
        r.permissions as rolePermissions
      FROM users u
      LEFT JOIN employees e ON u.employeeId = e.id
      LEFT JOIN departments d ON e.departmentId = d.id
      LEFT JOIN job_titles jt ON e.jobTitleId = jt.id
      LEFT JOIN roles r ON u.roleId = r.id
    `);

    console.log('‚úÖ Vue user_profiles cr√©√©e');

    console.log('üéâ Migration termin√©e avec succ√®s !');
    console.log('\nüìã Champs ajout√©s :');
    console.log('   - city, postalCode, country');
    console.log('   - emergencyContactName, emergencyContactPhone, emergencyContactRelationship');
    console.log('   - firstName, lastName, phone, address (dans users)');
    console.log('\nüîç Vue cr√©√©e : user_profiles');

  } catch (error) {
    console.error('‚ùå Erreur lors de la migration:', error);
  } finally {
    await sequelize.close();
  }
}

addProfileFieldsSimple(); 